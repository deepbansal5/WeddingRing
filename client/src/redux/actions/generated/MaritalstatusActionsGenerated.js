/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN MaritalstatusActionsGenerated.js PLEASE EDIT ../MaritalstatusActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import MaritalstatusApi from "../../../api/MaritalstatusApi";

let actionsFunction = {

  //CRUD METHODS

  // Create maritalstatus
  createMaritalstatus: function(maritalstatus) {
    return function(dispatch) {
      return MaritalstatusApi
        .createMaritalstatus(maritalstatus)
        .then(maritalstatus => {
          dispatch(actionsFunction.createMaritalstatusSuccess(maritalstatus));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createMaritalstatusSuccess: function(maritalstatus) {
    return { type: types.CREATE_MARITALSTATUS_SUCCESS, payload: maritalstatus };
  },


  // Delete maritalstatus
  deleteMaritalstatus: function(id) {
    return function(dispatch) {
      return MaritalstatusApi
        .deleteMaritalstatus(id)
        .then(maritalstatus => {
          dispatch(actionsFunction.deleteMaritalstatusSuccess(maritalstatus));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteMaritalstatusSuccess: function(maritalstatus) {
    return { type: types.DELETE_MARITALSTATUS_SUCCESS, payload: maritalstatus };
  },


  // Get maritalstatus
  loadMaritalstatus: function(id) {
    return function(dispatch) {
      return MaritalstatusApi
        .getOneMaritalstatus(id)
        .then(maritalstatus => {
          dispatch(actionsFunction.loadMaritalstatusSuccess(maritalstatus));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadMaritalstatusSuccess: function(maritalstatus) {
    return { type: types.GET_MARITALSTATUS_SUCCESS, payload: maritalstatus };
  },

  // Load  list
  loadMaritalstatusList: function() {
    return function(dispatch) {
      return MaritalstatusApi
        .getMaritalstatusList()
        .then(list => {
          dispatch(actionsFunction.loadMaritalstatusListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadMaritalstatusListSuccess: function(list) {
    return { type: types.LIST_MARITALSTATUS_SUCCESS, payload: list };
  },

	
  // Save maritalstatus
  saveMaritalstatus: function(maritalstatus) {
    return function(dispatch) {
      return MaritalstatusApi
        .saveMaritalstatus(maritalstatus)
        .then(maritalstatus => {
          dispatch(actionsFunction.saveMaritalstatusSuccess(maritalstatus));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveMaritalstatusSuccess: function(maritalstatus) {
    return { type: types.UPDATE_MARITALSTATUS_SUCCESS, payload: maritalstatus };
  },


};

export default actionsFunction;
